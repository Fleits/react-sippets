{"version":3,"sources":["Snippets/Hooks/index.js","Snippets/Hooks/UseState.js","Snippets/Context/Basic.js","Snippets/Context/ChangeValueInConsumer.js","Snippets/index.js","Snippets/Context/index.js","Layout/Snippet.js","Layout/SnippetGroup.js","index.js","App.js"],"names":["component","useState","active","setActive","className","onClick","code","name","Context","React","createContext","Child","text","Consumer","value","style","margin","meta","setValue","Provider","number","marginRight","Snippets","snippets","Hooks","Basic","SyntaxHighlighter","registerLanguage","jsx","Snippet","Component","showCode","setShowCode","marginTop","marginBottom","float","cursor","data-content","language","atomDark","SnippetGroup","map","snippet","index","key","ReactDOM","render","flatMap","group","document","getElementById"],"mappings":"8MAEe,GCgCF,CAAEA,UAhCE,WAChB,IAAD,EAC8BC,oBAAS,GADvC,mBACSC,EADT,KACiBC,EADjB,KAGE,OACE,6BACE,4BACEC,UAAS,2BAAsBF,EAAS,QAAU,MAAzC,wBACTG,QAAS,kBAAMF,GAAWD,KAC1B,uBAAGE,UAAU,oBAEf,sCAAYF,EAAS,SAAW,cAqBFI,KAjB1B,uUAiBgCC,KAD7B,UC/BPC,EAAUC,IAAMC,cAAc,GAgB9BC,EAAQ,SAAC,GACd,IADgBC,EACjB,EADiBA,KAEf,OAAQ,kBAACJ,EAAQK,SAAT,MACL,SAAAC,GAAK,OAAI,0BAAMC,MAAO,CAACC,OAAQ,IAAKJ,EAA3B,MAAoCE,OAiCnCG,EAFF,CAAEjB,UAhDD,WACb,IAAD,EAC4BC,mBAAS,GADrC,mBACSa,EADT,KACgBI,EADhB,KAEE,OACE,oCACE,4BAAQd,UAAU,+BAA+BC,QAAS,kBAAMa,EAASJ,EAAQ,KAAjF,WACA,kBAACN,EAAQW,SAAT,CAAkBL,MAAOA,GACvB,kBAAC,EAAD,CAAOF,KAAK,YACZ,kBAAC,EAAD,CAAOA,KAAK,eAwCaN,KA3BvB,2hBA2B6BC,KAD1B,uBCjDPC,EAAUC,IAAMC,cAAc,GAe9BC,EAAQ,SAAC,GACd,IADgBC,EACjB,EADiBA,KAEf,OAAQ,kBAAC,EAAQC,SAAT,MACL,gBAAGO,EAAH,EAAGA,OAAQF,EAAX,EAAWA,SAAX,OAA2B,oCAC1B,0BAAMH,MAAO,CAACM,YAAa,IAAKT,EAAhC,MAAyCQ,GACzC,4BAAQhB,UAAU,+BAA+BC,QAAS,kBAAMa,EAASE,EAAS,KAAlF,gBCnBOE,EAAW,CACtB,CAAEf,KAAM,QAASgB,SAAUC,GAC3B,CAAEjB,KAAM,UAAWgB,SCFN,CACbE,EFoDW,CAAEzB,UApDe,WAC7B,IAAD,EAC6BC,mBAAS,GADtC,mBACSmB,EADT,KACiBF,EADjB,KAEE,OACE,oCACE,kBAAC,EAAQC,SAAT,CAAkBL,MAAO,CAAEM,SAAQF,aACjC,kBAAC,EAAD,CAAON,KAAK,YACZ,kBAAC,EAAD,CAAOA,KAAK,eA6C6BN,KA7BvC,mmBA6B6CC,KAD1C,+B,gCGjDbmB,IAAkBC,iBAAiB,MAAOC,KAE1C,IAAMC,EAAU,SAAC,GAChB,IAD6BC,EAC9B,EADmB9B,UAAsBM,EACzC,EADyCA,KAAMC,EAC/C,EAD+CA,KAC/C,EACkCN,oBAAS,GAD3C,mBACS8B,EADT,KACmBC,EADnB,KAGE,OACE,yBAAKjB,MAAO,CAACkB,UAAW,GAAIC,aAAc,KACxC,wBAAI9B,UAAU,aACXG,EACD,yBAAKQ,MAAO,CAAEoB,MAAM,QAASC,OAAQ,YACnC,kBAAC,kBAAD,CAAiBxB,KAAMN,GACrB,uBAAGF,UAAU,iBAAiBiC,eAAa,eAE7C,uBAAGjC,UAAU,iBAAiBC,QAAS,kBAAM2B,GAAaD,QAG9D,kBAACD,EAAD,MACCC,GACC,kBAAC,IAAD,CAAmBO,SAAS,MAAMvB,MAAOwB,KACtCjC,KCtBLkC,EAAe,SAAC,GACrB,IADuBjC,EACxB,EADwBA,KAAMgB,EAC9B,EAD8BA,SAE5B,OACE,yBAAKnB,UAAU,uBACb,4BAAKG,GACJgB,EAASkB,KAAI,SAACC,EAASC,GAAV,OAAoB,kBAAC,EAAD,eAASC,IAAKD,GAAWD,S,MCLjEG,IAASC,OAAO,mBCChB,WAEE,OACE,yBAAK1C,UAAU,qBACZkB,EAASyB,SAAQ,SAACC,EAAOL,GAAR,OAAkB,kBAAC,EAAD,eAAcC,IAAKD,GAAWK,UDLxD,MAASC,SAASC,eAAe,W","file":"static/js/main.ace6c1e5.chunk.js","sourcesContent":["import UseState from './UseState';\r\n\r\nexport default [\r\n  UseState\r\n];","import React, { useState } from 'react';\r\n\r\nconst UseState = () => \r\n{\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className={`circular mini ui ${active ? 'green' : 'red'} compact icon button`}\r\n        onClick={() => setActive(!active)}>\r\n        <i className='power off icon'></i>\r\n      </button>\r\n      <span>I am {active ? 'active' : 'inactive'}</span>\r\n    </div>\r\n  );\r\n};\r\nconst code = `import React, { useState } from 'react';\r\n\r\nconst UseState = () => \r\n{\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setActive(!active)}>\r\n        {active ? 'off' : 'on'}\r\n      </button>\r\n      <span>I am {active ? 'active' : 'inactive'}</span>\r\n    </div>\r\n  );\r\n};`;\r\n\r\nconst name = 'State';\r\nconst meta = { component: UseState, code, name };\r\n\r\nexport default meta;","import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst Basic = () => \r\n{\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <>\r\n      <button className='ui compact mini basic button' onClick={() => setValue(value + 1)}>Value++</button>\r\n      <Context.Provider value={value}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {value => <span style={{margin: 5}}>{text} - {value}</span>}\r\n  </Context.Consumer>);\r\n};\r\n\r\nconst code =`import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst Basic = () => \r\n{\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <>\r\n      <button onClick={() => setValue(value + 1)}>Value++</button>\r\n      <Context.Provider value={value}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {value => <span>{text} - {value}</span>}\r\n  </Context.Consumer>);\r\n};\r\n`;\r\n\r\nconst name = 'Functional Consumer';\r\nconst meta = { component: Basic, code, name };\r\n\r\nexport default meta;","import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst ChangeValueInConsumer = () => \r\n{\r\n  const [number, setValue] = useState(0);\r\n  return (\r\n    <>      \r\n      <Context.Provider value={{ number, setValue }}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {({ number, setValue }) => (<>\r\n      <span style={{marginRight: 5}}>{text} - {number}</span>\r\n      <button className='ui compact mini basic button' onClick={() => setValue(number + 1)}>Value++</button>\r\n    </>)}\r\n  </Context.Consumer>);\r\n};\r\n\r\nconst code =`import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst ChangeValueInConsumer = () => \r\n{\r\n  const [number, setValue] = useState(0);\r\n  return (\r\n    <>\r\n      <Context.Provider value={{ number, setValue }}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {({ number, setValue }) => (<>\r\n      <span>{text} - {number}</span>\r\n      <button onClick={() => setValue(number + 1)}>Value++</button>\r\n    </>)}\r\n  </Context.Consumer>);\r\n};\r\n`;\r\n\r\nconst name = 'Change value in Consumer';\r\nconst meta = { component: ChangeValueInConsumer, code, name };\r\n\r\nexport default meta;","import Hooks from './Hooks';\r\nimport Context from './Context';\r\n\r\nexport const Snippets = [\r\n  { name: 'Hooks', snippets: Hooks }, \r\n  { name: 'Context', snippets: Context }\r\n];","import Basic from './Basic';\r\nimport ChangeValueInConsumer from './ChangeValueInConsumer';\r\n\r\nexport default [\r\n  Basic, ChangeValueInConsumer\r\n];","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\r\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nSyntaxHighlighter.registerLanguage('jsx', jsx);\r\n\r\nconst Snippet = ({ component: Component, code, name }) => \r\n{\r\n  const [showCode, setShowCode] = useState(false);\r\n\r\n  return (\r\n    <div style={{marginTop: 20, marginBottom: 20}}>      \r\n      <h3 className='ui header'>\r\n        {name}\r\n        <div style={{ float:'right', cursor: 'pointer' }}>\r\n          <CopyToClipboard text={code}>\r\n            <i className='copy link icon' data-content='Copy code'></i>\r\n          </CopyToClipboard>\r\n          <i className='code link icon' onClick={() => setShowCode(!showCode)}></i>\r\n        </div>\r\n      </h3>              \r\n      <Component />\r\n      {showCode && \r\n        <SyntaxHighlighter language='jsx' style={atomDark}>\r\n          {code}\r\n        </SyntaxHighlighter>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSnippet.propTypes = {\r\n  component: PropTypes.func,\r\n  code: PropTypes.string, \r\n  name: PropTypes.string\r\n};\r\n\r\nexport { Snippet };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Snippet } from './Snippet';\r\n\r\nconst SnippetGroup = ({ name, snippets }) => \r\n{\r\n  return (\r\n    <div className='ui vertical segment'>\r\n      <h1>{name}</h1>\r\n      {snippets.map((snippet, index) => <Snippet key={index} {...snippet} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nSnippetGroup.propTypes = {\r\n  name: PropTypes.string,\r\n  snippets: PropTypes.array\r\n};\r\n\r\nexport { SnippetGroup };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\nimport { Snippets } from './Snippets';\nimport { SnippetGroup } from 'Layout/SnippetGroup';\nimport 'fomantic-ui-css/semantic.min.css';\n\nfunction App() \n{  \n  return (\n    <div className='ui text container'>\n      {Snippets.flatMap((group, index) => <SnippetGroup key={index} {...group} />)}\n    </div>\n  );\n}\n\nexport { App };"],"sourceRoot":""}