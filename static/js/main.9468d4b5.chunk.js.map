{"version":3,"sources":["Snippets/Hooks/index.js","Snippets/Hooks/UseState.js","Snippets/Context/Basic.js","Snippets/Context/index.js","Snippets/index.js","Layout/Snippet.js","Layout/SnippetGroup.js","index.js","App.js"],"names":["Hooks","UseState","Component","useState","active","setActive","className","onClick","code","Context","React","createContext","Basic","value","setValue","Provider","text","Child","Consumer","Code","Snippets","SyntaxHighlighter","registerLanguage","jsx","Snippet","name","component","showCode","setShowCode","style","float","cursor","data-content","language","atomDark","SnippetGroup","items","Object","keys","map","key","ReactDOM","render","flatMap","x","document","getElementById"],"mappings":"2ZAEaA,EAAQ,CACnBC,SAAU,CAAEC,UCDG,WAChB,IAAD,EAC8BC,oBAAS,GADvC,mBACSC,EADT,KACiBC,EADjB,KAGE,OACE,6BACE,4BACEC,UAAS,2BAAsBF,EAAS,QAAU,MAAzC,wBACTG,QAAS,kBAAMF,GAAWD,KAC1B,uBAAGE,UAAU,oBAEf,sCAAYF,EAAS,SAAW,cDVHI,KCcjB,yUCfZC,EAAUC,IAAMC,cAAc,GAE9BC,EAAQ,WACb,IAAD,EAC4BT,mBAAS,GADrC,mBACSU,EADT,KACgBC,EADhB,KAEE,OACE,oCACE,4BAAQP,QAAS,kBAAMO,EAASD,EAAQ,KAAxC,OACA,kBAACJ,EAAQM,SAAT,CAAkBF,MAAOA,GACvB,kBAAC,EAAD,CAAOG,KAAK,YACZ,kBAAC,EAAD,CAAOA,KAAK,eAMdC,EAAQ,SAAC,GACd,IADgBD,EACjB,EADiBA,KAEf,OAAQ,kBAACP,EAAQS,SAAT,MACL,SAAAL,GAAK,OAAI,6BAAMG,EAAN,IAAaH,OAIrBM,EAAI,mhBCvBGV,EAAU,CACrBG,SCAWQ,EAAW,CACtBpB,EAAOS,G,gCCETY,IAAkBC,iBAAiB,MAAOC,KAE1C,IAAMC,EAAU,SAAC,GAChB,IADkBC,EACnB,EADmBA,KAAMC,EACzB,EADyBA,UACzB,EACkCvB,oBAAS,GAD3C,mBACSwB,EADT,KACmBC,EADnB,KAEU1B,EAAoBwB,EAApBxB,UAAWM,EAASkB,EAATlB,KAEnB,OACE,6BAEE,wBAAIF,UAAU,aACXmB,EACD,yBAAKI,MAAO,CAAEC,MAAM,QAASC,OAAQ,YACnC,kBAAC,kBAAD,CAAiBf,KAAMR,GACrB,uBAAGF,UAAU,iBAAiB0B,eAAa,eAE7C,uBAAG1B,UAAU,iBAAiBC,QAAS,kBAAMqB,GAAaD,QAG9D,kBAACzB,EAAD,MACCyB,GACC,kBAAC,IAAD,CAAmBM,SAAS,MAAMJ,MAAOK,KACtC1B,KCxBL2B,EAAe,SAAC,GACrB,IADuBV,EACxB,EADwBA,KAAMW,EAC9B,EAD8BA,MAE5B,OACE,yBAAK9B,UAAU,uBACb,qCAAWmB,GAEVY,OAAOC,KAAKF,GAAOG,KAAI,SAAAC,GAEtB,OAAO,kBAAC,EAAD,CAASA,IAAKA,EAAKf,KAAMe,EAAKd,UAAWU,EAAMI,U,MCR9DC,IAASC,OAAO,mBCChB,WAEE,OACE,yBAAKpC,UAAU,qBACZc,EAASuB,SAAQ,SAAAC,GAEhB,OAAOP,OAAOC,KAAKM,GAAGD,SAAQ,SAAAH,GAAG,OAAI,kBAAC,EAAD,CAAcf,KAAMe,EAAKJ,MAAOQ,EAAEJ,cDP/D,MAASK,SAASC,eAAe,W","file":"static/js/main.9468d4b5.chunk.js","sourcesContent":["import { UseState, UseStateCode } from './UseState';\r\n\r\nexport const Hooks = {\r\n  UseState: { Component: UseState, code: UseStateCode }\r\n};","import React, { useState } from 'react';\r\n\r\nconst UseState = () => \r\n{\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className={`circular mini ui ${active ? 'green' : 'red'} compact icon button`}\r\n        onClick={() => setActive(!active)}>\r\n        <i className='power off icon'></i>\r\n      </button>\r\n      <span>I am {active ? 'active' : 'inactive'}</span>\r\n    </div>\r\n  );\r\n};\r\nconst UseStateCode = `import React, { useState } from 'react';\r\n\r\nconst UseState = () => \r\n{\r\n  const [active, setActive] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setActive(!active)}>\r\n        {active ? 'off' : 'on'}\r\n      </button>\r\n      <span>I am {active ? 'active' : 'inactive'}</span>\r\n    </div>\r\n  );\r\n};`;\r\n\r\nexport { UseState, UseStateCode };","import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst Basic = () => \r\n{\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <>\r\n      <button onClick={() => setValue(value + 1)}>add</button>\r\n      <Context.Provider value={value}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {value => <div>{text} {value}</div>}\r\n  </Context.Consumer>);\r\n};\r\n\r\nconst Code =`import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext(0);\r\n\r\nconst Basic = () => \r\n{\r\n  const [value, setValue] = useState(0);\r\n  return (\r\n    <>\r\n      <button onClick={() => setValue(value + 1)}>add</button>\r\n      <Context.Provider value={value}>\r\n        <Child text='Child 1' />\r\n        <Child text='Child 2' />\r\n      </Context.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Child = ({ text }) => \r\n{\r\n  return (<Context.Consumer>\r\n    {value => <div>{text} {value}</div>}\r\n  </Context.Consumer>);\r\n};\r\n`;\r\n\r\nexport { Basic as Component, Code as code };","import * as Basic from './Basic';\r\n\r\nexport const Context = {\r\n  Basic\r\n};","import * as Hooks from './Hooks';\r\nimport * as Context from './Context';\r\n\r\nexport const Snippets = [\r\n  Hooks, Context\r\n];","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\r\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nSyntaxHighlighter.registerLanguage('jsx', jsx);\r\n\r\nconst Snippet = ({ name, component }) => \r\n{\r\n  const [showCode, setShowCode] = useState(true);\r\n  const { Component, code } = component;\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h3 className='ui header'>\r\n        {name}\r\n        <div style={{ float:'right', cursor: 'pointer' }}>\r\n          <CopyToClipboard text={code}>\r\n            <i className='copy link icon' data-content='Copy code'></i>\r\n          </CopyToClipboard>\r\n          <i className='code link icon' onClick={() => setShowCode(!showCode)}></i>\r\n        </div>\r\n      </h3>              \r\n      <Component />\r\n      {showCode && \r\n        <SyntaxHighlighter language='jsx' style={atomDark}>\r\n          {code}\r\n        </SyntaxHighlighter>}\r\n    </div>\r\n  );\r\n};\r\n\r\nSnippet.propTypes = {\r\n\r\n};\r\n\r\nexport { Snippet };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Snippet } from './Snippet';\r\n\r\nconst SnippetGroup = ({ name, items }) => \r\n{\r\n  return (\r\n    <div className='ui vertical segment'>\r\n      <h1>      {name}\r\n      </h1>\r\n      {Object.keys(items).map(key => \r\n      {\r\n        return <Snippet key={key} name={key} component={items[key]} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nSnippetGroup.propTypes = {\r\n\r\n};\r\n\r\nexport { SnippetGroup };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react';\nimport { Snippets } from './Snippets';\nimport { SnippetGroup } from 'Layout/SnippetGroup';\nimport 'fomantic-ui-css/semantic.min.css';\n\nfunction App() \n{  \n  return (\n    <div className='ui text container'>\n      {Snippets.flatMap(x => \n      {\n        return Object.keys(x).flatMap(key => <SnippetGroup name={key} items={x[key]} />);      \n      })}\n    </div>\n  );\n}\n\nexport { App };"],"sourceRoot":""}